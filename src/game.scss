$grassColor: rgb(20, 160, 46);
$springColor: rgb(146, 220, 186);
$summerColor: rgb(156, 219, 67);
$fallColor: rgb(233, 181, 163);
$winterColor: rgb(185, 191, 251);
$fontColor: rgb(20, 16, 19);
$tileWidth: 4.8rem;
$tileHeight: 4.8rem;

@mixin crop($name, $row) {
  @for $i from 1 through 6 {
    .#{$name}.stage#{$i} {
      background-position: 0 (($row - (($i - 1) * 6)) * $tileHeight);
    }
  }
}

/* RESET */
* {
  cursor: default;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  image-rendering: optimizeSpeed;
  image-rendering: -moz-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: optimize-contrast;
  image-rendering: pixelated;
}

html {
  font-weight: normal;
  font-size: 10px;
  font-family: Georgia, Times, 'Times New Roman', serif;
  background: $grassColor;
  color: $fontColor;
}

@media screen and (min-width: 320px) {
  html {
    font-size: calc(10px + (19.2 - 10) * ((100vw - 320px) / (1000 - 320)));
  }
}

@media screen and (min-width: 1000px) {
  html {
    font-size: 19.2px;
  }
}

a {
  color: rgb(20, 52, 100);
}

a:visited {
  color: rgb(115, 23, 45);
}

.magic {
  transition: background 22.5s linear;
}

.spring {
  background: $springColor;
}

.summer {
  background: $summerColor;
}

.fall {
  background: $fallColor;
}

.winter {
  background: $winterColor;
}

/* SCREEN */
.world {
  /* Usable area on an iPhone SE is 320x444 pixels */
  width: 32rem;
  min-height: 44.4rem;
  /*
  height: 44.4rem;
  overflow: hidden;
  border: 1px solid cyan;
  */
}

.row {
  display: flex;
  flex-direction: row;
}

.col {
  display: flex;
  flex-direction: column;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.buffer {
  min-height: (6 * $tileHeight);
  flex-grow: 1;
  margin: 0 0.8rem;
}

/* FARM */
.tile {
  display: inline-flex;
  width: $tileHeight;
  height: $tileHeight;
  background-size: (1 * $tileWidth) (72 * $tileHeight);
  background-image: url('farm.png');
  background-position: 0 0;
  background-repeat: no-repeat;
}

.farm {
  display: grid;
  grid-template: repeat(6, $tileWidth) / repeat(6, $tileHeight);
  width: fit-content;
  align-self: center;
  user-select: none;
  touch-action: manipulation;

  .plot.active {
    border-top: 0.2rem solid rgb(180, 32, 42);
    border-right: 0.2rem solid rgb(115, 23, 45);
    border-bottom: 0.2rem solid rgb(115, 23, 45);
    border-left: 0.2rem solid rgb(180, 32, 42);
  }
}

.plot {
  display: grid;
}

.plot > .ground,
.plot > .fertilizer,
.plot > .crop,
.plot > .animal,
.plot > .water {
  grid-area: 1 / 1 / -1 / -1;
}

.plot > .crop,
.plot > .animal,
.plot > .water {
  z-index: 1;
}

.tile.ground {
  background-position: 0 (-17 * $tileHeight);
}
.till.stage0000 {
  background-position: 0 (-1 * $tileHeight);
}
.till.stage0001 {
  background-position: 0 (-4 * $tileHeight);
}
.till.stage0010 {
  background-position: 0 (-5 * $tileHeight);
}
.till.stage0011 {
  background-position: 0 (-11 * $tileHeight);
}
.till.stage0100 {
  background-position: 0 (-2 * $tileHeight);
}
.till.stage0101 {
  background-position: 0 (-3 * $tileHeight);
}
.till.stage0110 {
  background-position: 0 (-8 * $tileHeight);
}
.till.stage0111 {
  background-position: 0 (-14 * $tileHeight);
}
.till.stage1000 {
  background-position: 0 (-7 * $tileHeight);
}
.till.stage1001 {
  background-position: 0 (-13 * $tileHeight);
}
.till.stage1010 {
  background-position: 0 (-6 * $tileHeight);
}
.till.stage1011 {
  background-position: 0 (-12 * $tileHeight);
}
.till.stage1100 {
  background-position: 0 (-10 * $tileHeight);
}
.till.stage1101 {
  background-position: 0 (-16 * $tileHeight);
}
.till.stage1110 {
  background-position: 0 (-9 * $tileHeight);
}
.till.stage1111 {
  background-position: 0 (-15 * $tileHeight);
}
.tile.water {
  background-position: 0 (-18 * $tileHeight);
}
.rose.stage1,
.tulip.stage1,
.sunflower.stage1 {
  background-position: 0 (-55 * $tileHeight);
}
.rose.stage2,
.tulip.stage2,
.sunflower.stage2 {
  background-position: 0 (-56 * $tileHeight);
}
.rose.stage3,
.tulip.stage3,
.sunflower.stage3 {
  background-position: 0 (-57 * $tileHeight);
}
.rose.stage4,
.tulip.stage4,
.sunflower.stage4 {
  background-position: 0 (-58 * $tileHeight);
}
.sunflower.stage5,
.sunflower.stage6 {
  background-position: 0 (-59 * $tileHeight);
}
.tulip.stage5,
.tulip.stage6 {
  background-position: 0 (-60 * $tileHeight);
}
.rose.stage5,
.rose.stage6 {
  background-position: 0 (-61 * $tileHeight);
}
.wildflower.stage6 {
  background-position: 0 (-62 * $tileHeight);
}
.tile.fertilizer {
  background-position: 0 (-63 * $tileHeight);
}
.tile.crop.stage-1 {
  background-position: 0 (-64 * $tileHeight);
}
.tile.coins {
  transform: scale(0.75);
  background-position: 0 (-65 * $tileHeight);
}
.tile.hoe {
  background-position: 0 (-66 * $tileHeight);
}
.tile.can {
  background-position: 0 (-67 * $tileHeight);
}
.tile.sprinkler {
  background-position: 0 (-68 * $tileHeight);
}
.tile.seeds {
  background-position: 0 (-69 * $tileHeight);
}
.tile.bunny {
  background-position: 0 (-70 * $tileHeight);
}
.tile.cow {
  background-position: 0 (-71 * $tileHeight);
}

@include crop('turnip', -19);
@include crop('tomato', -20);
@include crop('eggplant',-21);
@include crop('strawberry', -22);
@include crop('potato', -23);
@include crop('avocado', -24);

/* STATS */
.stats {
  justify-content: space-between;
  align-items: center;
  margin: 0 0.8rem;
  font-size: 1.6rem;
}

/* STORE */
.cash {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
}

.time {
  > sup {
    font-size: (1.6rem / 1.618);
  }
}

$storeBorder: rgb(113, 65, 59);
$storeBackground: rgb(228, 210, 170);
$itemBorder: rgb(113, 65, 59);
$itemBackground: rgb(244, 210, 156);
$itemDetailBorder: rgb(187, 117, 71);
$itemDetailBackground: rgb(219, 164, 99);

/* MARKET */
.store,
.market,
.info {
  background: $storeBackground;
  border: 0.1rem solid $storeBorder;
  font-size: 1.6rem;
  touch-action: manipulation;

  > .slot {
    margin: 0.1rem;
  }

  > .item {
    justify-content: space-between;

    > .crop {
      align-items: center;
      position: relative;
      padding: 0.2rem 0 0.2rem 0.4rem;

      > .col {
        margin-left: 0.4rem;
      }

      .unlock {
        font-size: 1.2rem;
      }
    }
  }

  .title {
    font-size: 2.4rem;
  }

  .subtitle {
    font-size: 1.2rem;

    > sup {
      font-size: (1.2rem / 1.618);
    }
  }

  .message {
    font-size: 1.6rem;
    padding: 0.8rem;
  }
}

.slot {
  background-color: $itemBackground;
  border: 0.1rem solid $itemBorder;
  position: relative;

  > *:first-child:before,
  > *:first-child:after,
  > *:last-child:before,
  > *:last-child:after {
    content: '';
    display: inline-block;
    position: absolute;
    width: 0.4rem;
    height: 0.4rem;
    margin: 0.1rem;
    background: $itemDetailBackground;
    border: 0.1rem solid $itemDetailBorder;
  }

  > *:first-child:before {
    top: 0;
    left: 0;
    border-bottom-right-radius: 0.4rem;
  }

  > *:first-child:after {
    bottom: 0;
    left: 0;
    border-top-right-radius: 0.4rem;
  }

  > *:last-child:before {
    top: 0;
    right: 0;
    border-bottom-left-radius: 0.4rem;
  }

  > *:last-child:after {
    bottom: 0;
    right: 0;
    border-top-left-radius: 0.4rem;
  }
}

/* CONTROLS */
.sticker {
  justify-content: center;
  align-items: center;
  width: ($tileWidth / 2);
  height: ($tileHeight / 2);
  background: rgb(18, 32, 32);
  border-radius: 50%;
  font-size: 1.6rem;

  > .inner {
    display: flex;
    justify-content: center;
    align-items: center;
    width: (($tileWidth / 2) - 0.4rem);
    height: (($tileHeight/ 2) - 0.4rem);
    background: rgb(254, 243, 192);
    border-radius: 50%;
  }
}

.picture {
  display: grid;
  grid-template: 50% 50% / 50% 50%;

  > .tool,
  > .crop,
  > .seeds {
    grid-area: 1 / 1 / -1 / -1;
  }

  > .sticker {
    grid-area: 2 / 1 / 2 / 1;
    z-index: 1;
  }

  > .key {
    grid-area: 1 / 2 / 1 / 2;
    margin-left: 1.2rem;
    margin-top: 0.1rem;
  }
}

.key {
  display: grid;
  place-items: center;
  width: 1.2rem;
  height: 1.2rem;
	font-family: 'Lucida Grande', Lucida, Arial, sans-serif;
	cursor: default;
  /*
	border-radius: .2rem;
  background: rgb(255, 255, 255);
  background: linear-gradient(0, rgb(218, 224, 234), rgb(255, 255, 255));
  color: rgb(6, 6, 8);
  text-shadow: 0 0 .2rem rgb(255, 255, 255);
  box-shadow:
  inset 0 0 .1rem rgb(255, 255, 255),
  inset 0 0 .4rem rgb(218, 224, 234),
  0 .1rem 0 rgb(139, 147, 175),
  0 .11rem 0 rgba(6, 6, 8, .4),
  0 .1rem .11rem rgba(6, 6, 8, .9);
  */
}

.inventory {
  background: $storeBackground;
  border: 0.1rem solid $storeBorder;
  padding: 0.1rem;
  user-select: none;
  width: fit-content;
  align-self: center;
  margin: 0 0.8rem;

  $itemShadow: rgb(160, 134, 98);
  $itemHighlight: rgb(254, 243, 192);
  $itemActiveShadow: rgb(115, 23, 45);
  $itemActiveHighlight: rgb(180, 32, 42);
  $itemBorderSize: 0.2rem;

  > .row {
    background-color: $itemBackground;
    border: 0.1rem solid $itemBorder;
  }

  > .row .item {
    margin: 0.1rem;
    background: $storeBackground;
    border-top: $itemBorderSize solid $itemShadow;
    border-right: $itemBorderSize solid $itemHighlight;
    border-bottom: $itemBorderSize solid $itemHighlight;
    border-left: $itemBorderSize solid $itemShadow;
    border-radius: 0.4rem;
  }

  > .row .item.active {
    border-top: $itemBorderSize solid $itemActiveHighlight;
    border-right: $itemBorderSize solid $itemActiveShadow;
    border-bottom: $itemBorderSize solid $itemActiveShadow;
    border-left: $itemBorderSize solid $itemActiveHighlight;
  }
}
.controls {
  margin: 0.4rem 0;
  justify-content: space-around;
  align-items: center;
}

$buttonBackground: rgb(255, 213, 65);
$buttonEdgeLight: rgb(249, 163, 27);
$buttonEdgeDark: rgb(250, 106, 10);
$buttonBorder: rgb(115, 23, 45);
$buttonShadowLight: rgba(74, 84, 98, 0.5);
$buttonShadowDark: rgba(20, 16, 19, 0.5);

.button {
  position: relative;
  display: grid;
  place-items: center;
  font-variant: small-caps;
  font-size: 1.6rem;
  min-width: $tileWidth;
  height: ($tileWidth / 1.618);
  margin: 0.4rem 0.6rem 0.6rem 0.4rem;
  padding: 0 0.8rem;
  background: $buttonBackground;
  border-radius: 0.4rem;
  border-top: 0.1rem solid $buttonEdgeLight;
  border-right: 0.1rem solid $buttonEdgeDark;
  border-bottom: 0.1rem solid $buttonEdgeDark;
  border-left: 0.1rem solid $buttonEdgeLight;
  box-shadow: 0.2rem 0.2rem $buttonShadowDark, 0.4rem 0.4rem $buttonShadowLight;
  transition: all 0.1s ease;
  user-select: none;

  &:before {
    content: '';
    position: absolute;
    top: -0.15rem;
    right: -0.15rem;
    bottom: -0.15rem;
    left: -0.15rem;
    border: 0.1rem solid $buttonBorder;
    border-radius: 0.4rem;
  }

  &:active,
  &.active {
    transform: translate(0.1rem, 0.1rem);
    box-shadow: 0 0 $buttonShadowDark, 0 0 $buttonShadowLight;
  }
}

$registerBackground: rgb(32, 214, 199);
$registerDisabled: rgb(179, 185, 209);
$registerEdgeLight: rgb(36, 159, 222);
$registerEdgeDark: rgb(40, 92, 196);
$registerBorder: rgb(115, 23, 45);
$registerInnerBorderWidth: 0.1rem;
$registerOuterBorderWidth: 0.1rem;
$registerBorderRadius: 0.4rem;
$registerShadowLight: rgba(74, 84, 98, 0.5);
$registerShadowDark: rgba(20, 16, 19, 0.5);

.register {
  position: relative;
  margin: 0 1rem 0.2rem 0;
  min-width: 8.8rem;
  background: $registerBackground;
  border-top: $registerInnerBorderWidth solid $registerEdgeLight;
  border-right: $registerInnerBorderWidth solid $registerEdgeDark;
  border-bottom: $registerInnerBorderWidth solid $registerEdgeDark;
  border-left: $registerInnerBorderWidth solid $registerEdgeLight;
  border-radius: $registerBorderRadius;
  box-shadow: 0.2rem 0.2rem $registerShadowDark, 0.4rem 0.4rem $registerShadowLight;
  transition: all 0.1s ease;
  user-select: none;

  > .cash {
    margin: (-0.125 * $tileWidth);
    margin-left: (0.125 * $tileWidth);
  }

  &:before {
    content: '';
    position: absolute;
    top: (-1 * ($registerOuterBorderWidth + ($registerInnerBorderWidth / 2)));
    right: (-1 * ($registerOuterBorderWidth + ($registerInnerBorderWidth / 2)));
    bottom: (-1 * ($registerOuterBorderWidth + ($registerInnerBorderWidth / 2)));
    left: (-1 * ($registerOuterBorderWidth + ($registerInnerBorderWidth / 2)));
    border: $registerOuterBorderWidth solid $registerBorder;
    border-radius: $registerBorderRadius;
  }

  &:active {
    transform: translate(0.1rem, 0.1rem);
    box-shadow: 0 0 $registerShadowDark, 0 0 $registerShadowLight;
  }
}

.register.disabled {
  background-color: $registerDisabled;
};

/* COLOPHON */
.colophon {
  font-size: 1rem;
  text-align: right;
}

abbr[title="and"] {
  font-family: Baskerville, Constantia, Georgia, Times, 'Times New Roman', serif;;
  font-style: italic;
  text-decoration: none;
  font-size: 110%;
  cursor: help;
  /* Prevent `abbr` affecting the `line-height` */
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* UTILS */
.hidden {
  display: none !important;
}

.capitalize {
  text-transform: capitalize;
}

.small {
  transform: scale(0.75);
}

.rotate90 {
  transform: rotate(90deg);
}

.rotate180 {
  transform: rotate(180deg);
}

.rotate270 {
  transform: rotate(270deg);
}

.rotateX {
  transform: scaleX(-1);
}
